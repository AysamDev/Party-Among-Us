[{"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\index.js":"1","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\App.js":"2","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\stores\\userStore.js":"3","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Room.js":"4","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Home.js":"5","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board.js":"6","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\CreateRoom.js":"7","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\SideMenu.js":"8","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\RoomResult.js":"9","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\UserForm.js":"10","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\BoardCanvas.js":"11","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\SuggestSong.js":"12","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Playlist.js":"13","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\Player.js":"14","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Song.js":"15","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\Sprite.js":"16","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\SpeechBubble.js":"17","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\AvatarOption.js":"18","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Alert.js":"19","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Prompt.js":"20","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Header.js":"21"},{"size":481,"mtime":1611144054769,"results":"22","hashOfConfig":"23"},{"size":543,"mtime":1611182638841,"results":"24","hashOfConfig":"23"},{"size":7333,"mtime":1611176503638,"results":"25","hashOfConfig":"23"},{"size":2458,"mtime":1611181727436,"results":"26","hashOfConfig":"23"},{"size":1202,"mtime":1611183271089,"results":"27","hashOfConfig":"23"},{"size":4115,"mtime":1611182190832,"results":"28","hashOfConfig":"23"},{"size":4260,"mtime":1611161025433,"results":"29","hashOfConfig":"23"},{"size":1928,"mtime":1611182612760,"results":"30","hashOfConfig":"23"},{"size":1176,"mtime":1611162632200,"results":"31","hashOfConfig":"23"},{"size":2502,"mtime":1611159583321,"results":"32","hashOfConfig":"23"},{"size":2923,"mtime":1611144054739,"results":"33","hashOfConfig":"23"},{"size":2058,"mtime":1611144054764,"results":"34","hashOfConfig":"23"},{"size":328,"mtime":1611144054757,"results":"35","hashOfConfig":"23"},{"size":3451,"mtime":1611144054743,"results":"36","hashOfConfig":"23"},{"size":938,"mtime":1611144054762,"results":"37","hashOfConfig":"23"},{"size":1114,"mtime":1611144054747,"results":"38","hashOfConfig":"23"},{"size":14992,"mtime":1611144054745,"results":"39","hashOfConfig":"23"},{"size":1085,"mtime":1611159570036,"results":"40","hashOfConfig":"23"},{"size":1429,"mtime":1611178811154,"results":"41","hashOfConfig":"23"},{"size":2612,"mtime":1611180007923,"results":"42","hashOfConfig":"23"},{"size":1286,"mtime":1611183261286,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1lz4ijw",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\index.js",[],["91","92"],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\App.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\stores\\userStore.js",["93","94"],"import { makeObservable, observable, action} from 'mobx';\r\nimport axios from 'axios';\r\nimport socketIOClient from \"socket.io-client\";\r\nconst ENDPOINT = \"http://localhost:4200\";\r\n\r\n\r\nexport class UserStore{\r\n    constructor(){\r\n        this.socket = socketIOClient(ENDPOINT)\r\n        this.getRooms()\r\n\r\n        this.avatars = [\r\n            {name: \"red\" , src: \"https://koolinus.files.wordpress.com/2019/03/avataaars-e28093-koolinus-1-12mar2019.png?w=640\"},\r\n            {name: \"white\", src: \"https://user-images.githubusercontent.com/5709133/50445980-88299a80-0912-11e9-962a-6fd92fd18027.png\"},\r\n            {name: \"orange\" , src: \"https://koolinus.files.wordpress.com/2019/03/avataaars-e28093-koolinus-1-12mar2019.png?w=640\"},\r\n            {name: \"yellow\", src: \"https://user-images.githubusercontent.com/5709133/50445980-88299a80-0912-11e9-962a-6fd92fd18027.png\"},\r\n            {name: \"pink\" , src: \"https://koolinus.files.wordpress.com/2019/03/avataaars-e28093-koolinus-1-12mar2019.png?w=640\"},\r\n            {name: \"purple\", src: \"https://user-images.githubusercontent.com/5709133/50445980-88299a80-0912-11e9-962a-6fd92fd18027.png\"},\r\n            {name: \"blue\", src: \"https://koolinus.files.wordpress.com/2019/03/avataaars-e28093-koolinus-1-12mar2019.png?w=640\"},\r\n            {name: \"cyan\", src: \"https://user-images.githubusercontent.com/5709133/50445980-88299a80-0912-11e9-962a-6fd92fd18027.png\"},\r\n            {name: \"lime\", src: \"https://koolinus.files.wordpress.com/2019/03/avataaars-e28093-koolinus-1-12mar2019.png?w=640\"},\r\n            {name: \"black\", src: \"https://user-images.githubusercontent.com/5709133/50445980-88299a80-0912-11e9-962a-6fd92fd18027.png\"},\r\n        ]\r\n        \r\n        this.genres = [\"Blues\", \"Classical\", \"Hip-Hop\",\r\n                        \"Children\", \"Comedy\", \"Dance\", \"Electronic\",\r\n                        \"Pop\", \"Jazz\", \"Anime\", \"K-Pop\", \"Opera\",\r\n                        \"Rock\", \"Vocal\", \"Arabic\" ]\r\n    \r\n        this.themes=[\r\n            {name: \"Icy\", value: \"theme1\"},\r\n            {name: \"Sky\", value: \"theme2\"},\r\n            {name: \"Thunder\", value: \"theme3\"},\r\n            {name: \"Halloween1\", value: \"theme4\"},\r\n            {name: \"Halloween2\", value: \"theme5\"},\r\n            {name: \"WildZone\", value: \"theme6\"},\r\n            {name: \"Medieval\", value: \"theme7\"},\r\n            {name: \"Disco\", value: \"theme8\"},\r\n            {name: \"DiscoStar\", value: \"theme9\"},\r\n            {name: \"PlantWorld\", value: \"theme10\"},\r\n            {name: \"DJ.Penguin\", value: \"theme11\"},\r\n            {name: \"Splash\", value: \"theme12\"},\r\n            {name: \"Astro\", value: \"theme13\"},\r\n            {name: \"Snowy\", value: \"theme14\"},\r\n        ]\r\n        // this.images = [\r\n        //     {\r\n        //         id : 1,\r\n        //         src: 'https://images.pexels.com/photos/4173624/pexels-photo-4173624.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\r\n        //     },\r\n        //     {\r\n        //         id : 2,\r\n        //         src: 'https://cdn.pixabay.com/photo/2016/11/29/05/45/astronomy-1867616__340.jpg'\r\n        //     },\r\n        //     {\r\n        //         id : 3,\r\n        //         src: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg'\r\n        //     }\r\n        // ]\r\n\r\n        this.rooms = []\r\n        this.room = {}\r\n        this.userName = \"\"\r\n        this.avatar = \"\"\r\n        makeObservable(this, {\r\n            rooms: observable, //\r\n            userName: observable,//\r\n            avatar: observable,//\r\n            room: observable,//\r\n            createRoom: action,//\r\n            getRoom: action, //\r\n            getRooms: action,//\r\n            setRoom: action,//\r\n            addUser: action,//\r\n            suggestSong: action,//\r\n            LeaveRoom: action,//\r\n            addLike: action,\r\n            deleteRoom: action,//\r\n        })\r\n    }\r\n\r\n    async getRooms(){\r\n        try {\r\n            const result = (await axios.get(\"http://localhost:4200/rooms\")).data\r\n            this.rooms = result \r\n        } catch (error) {\r\n            return error\r\n        }\r\n    }\r\n\r\n    async setRoom(room){\r\n        this.room = room\r\n\r\n    }\r\n\r\n    compare(a, b){\r\n        if(a.guests.length > b.guests.length){\r\n            return -1 \r\n        }else if(a.guests.length < b.guests.length){\r\n            return 1\r\n        }else{\r\n            return 0\r\n        }\r\n    }\r\n\r\n    getTop10(){\r\n        return [...this.rooms].sort(this.compare)\r\n    }\r\n\r\n    async addLike(songID, unlike){\r\n        try {\r\n            const song = this.room.queue.find(q => q.id === songID)\r\n            song.votes = unlike ? song.votes-1 : song.votes+1\r\n            const body = { newVal: this.room.queue, field: 'queue'}\r\n            this.room = (await axios.put(`http://localhost:4200/room/${this.room._id}`,body)).data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    async createRoom(roomName, roomPassword, description, tags, theme){\r\n        //roomName, guests, roomPassword, host, description, tags, queue, theme, hostPassword, size\r\n        try {\r\n            const guests = []\r\n            const host = this.socket.id\r\n            const hostPassword = this.socket.id\r\n            const room = {roomName, guests, roomPassword, host, description, tags, queue:[], theme, hostPassword, size: 10}\r\n            console.log(room)\r\n            const response = (await axios.post(\"http://localhost:4200/room\", room)).data\r\n            console.log(response)\r\n            await this.getRooms()\r\n            this.room = response\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    async getRoom(){\r\n        try {\r\n            const result = (await axios.get(`http://localhost:4200/room/${this.room._id}`)).data\r\n            this.room = result\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    async LeaveRoom(){\r\n        try {       \r\n            const response = (await axios.delete(`http://localhost:4200/delete/${this.room._id}/${this.socket.id}/guests`)).data\r\n            this.room = null\r\n            this.getRooms()\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    async deleteRoom(){\r\n        try {\r\n            const response = await axios.delete(`http://localhost:4200/room/${this.room._id}`)\r\n            this.room = null\r\n            this.getRooms()\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    async suggestSong(id, song){\r\n        try {\r\n            const newVal = {newObj: {id, song, votes: 1}}\r\n            this.room = (await axios.put(`http://localhost:4200/add/${this.room._id}/queue`, newVal)).data\r\n            console.log(this.room)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    async sendMessage(message){//sending it using socket\r\n        try {\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    async addUser(userName, avatar){\r\n        try {\r\n            this.userName = userName\r\n            this.avatar = this.avatars.find(a => a.name === avatar)\r\n            const body = {newObj: {id: this.socket.id, userName, avatar}}\r\n            this.room = (await axios.put(`http://localhost:4200/add/${this.room._id}/guests`, body)).data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n}","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Room.js",["95"],"import React, {useState, useEffect} from 'react';\r\nimport Board from './Board';\r\nimport SideMenu from './SideMenu';\r\nimport UserForm from './UserForm';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport { observer, inject } from 'mobx-react';\r\nimport {Button} from '@material-ui/core';\r\nimport Alert from './Alert'\r\nimport Prompt from './Prompt'\r\n\r\nfunction Room(props) {\r\n    const [open, setOpen] = useState(null);\r\n    const location = useLocation();\r\n    const [alert, setAlert] = useState({value: false, text: \"\"})\r\n    const [prompt, setPrompt] = useState(false)\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        checkValidity()\r\n    }, []);\r\n\r\n    const checkValidity = async () => {\r\n        const roomID = location.pathname.split('/')[2]\r\n        await props.UserStore.getRooms()\r\n        const room = props.UserStore.rooms.find(r => r._id === roomID)\r\n        if(room && room.guests.length < room.size){\r\n            if(room.roomPassword){\r\n                setPrompt(true)\r\n            }else{\r\n                props.UserStore.setRoom(room)\r\n                setOpen(true)\r\n            }\r\n        }else if(!room){\r\n            setAlert({value: true, text: \"Room is Not Found\" })\r\n        }else{\r\n            setAlert({value: true, text: \"The Room is Full\" })\r\n        }\r\n    }\r\n\r\n    const checkHost = () => props.UserStore.socket.id === props.UserStore.room.host\r\n\r\n    const deleteRoom = async () => {\r\n        props.UserStore.deleteRoom()\r\n        history.push(\"/home\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"room\">\r\n            {open && <UserForm open={setOpen} /> }\r\n            {alert.value && <Alert text={alert.text} />}\r\n            {prompt && <Prompt setOpen={setOpen} />}\r\n            {open === false && (\r\n                <>\r\n                <div id=\"roomNameDesc\">\r\n                    <h3>\r\n                        {props.UserStore.room.roomName} \r\n                        <span> {props.UserStore.room.description}</span>\r\n                    </h3>\r\n                </div>\r\n                <div className=\"roomGrid\">\r\n                    <SideMenu />\r\n                    <Board />\r\n                    {checkHost() && <Button variant=\"contained\" color=\"secondary\" onClick={deleteRoom} >\r\n                        Delete Room\r\n                    </Button>}\r\n                </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"UserStore\")(observer(Room))\r\n\r\n","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Home.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board.js",["96"],"import React, { useRef, useEffect, useState } from 'react';\r\nimport BoardCanvas from './Board/BoardCanvas';\r\nimport { Button } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    selectTheme: {\r\n        margin: theme.spacing(2),\r\n        minWidth: 130,\r\n        fontSize: 25\r\n    },\r\n    chat: {\r\n        margin: theme.spacing(0.2),\r\n        width: 1000,\r\n        fontSize: 25,\r\n        alignItems: 'center'\r\n    },\r\n    btnDance: {\r\n        width: 120,\r\n        margin: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nfunction Board(props) {\r\n    const canvasRef = useRef(null),\r\n    messageRef = useRef(null),\r\n    boardRef = useRef(null),\r\n    [theme, setTheme] = useState(props.UserStore.room.theme),\r\n    classes = useStyles();\r\n\r\n    const doDance = () => {\r\n        boardRef.current.PLAYERS[0].movePlayer(null);\r\n    }\r\n\r\n    const onSelectTheme = (e) => {\r\n        const theTheme = e.target.value;\r\n        boardRef.current.changeTheme(theTheme);\r\n        setTheme(theTheme);\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        const message = messageRef.current;\r\n        boardRef.current.PLAYERS[0].sendMessage(message.value);\r\n    }\r\n\r\n    const onCanvasClick = (e) => {\r\n        const rect = canvasRef.current.getBoundingClientRect();\r\n        let x = Math.floor(e.clientX - rect.left);\r\n        let y = Math.floor(e.clientY - rect.top);\r\n\r\n        if (x + boardRef.current.PLAYERS[0].width > canvasRef.current.width)\r\n            x = x - boardRef.current.PLAYERS[0].width;\r\n\r\n        if (y + boardRef.current.PLAYERS[0].height > canvasRef.current.height)\r\n            y = y - boardRef.current.PLAYERS[0].height;\r\n\r\n        boardRef.current.PLAYERS[0].targetPos = {x, y};\r\n    }\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n        boardRef.current = new BoardCanvas(canvas, context, theme);\r\n        //TODO get sockets for other players before we start\r\n        boardRef.current.start();\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"board\">\r\n            <canvas onMouseDown={onCanvasClick} ref={canvasRef} width=\"1000\" height=\"632\"></canvas>\r\n            <br/>\r\n            <FormControl className={classes.chat}>\r\n                <InputEmoji maxLength={31} ref={messageRef} onEnter={sendMessage} cleanOnEnter placeholder=\"Type a message (/dance to dance)\" />\r\n                <Button type=\"button\" onClick={doDance} className={classes.btnDance} variant=\"contained\" color=\"secondary\">Dance</Button>\r\n            </FormControl>\r\n            <br/>\r\n            <FormControl className={classes.selectTheme}>\r\n                <InputLabel color=\"secondary\">Select a theme:</InputLabel>\r\n                <NativeSelect value={theme} onChange={onSelectTheme} name=\"select_theme\" color=\"secondary\">\r\n                    <option value=\"theme1\">Icy</option>\r\n                    <option value=\"theme2\">Sky</option>\r\n                    <option value=\"theme3\">Thunder</option>\r\n                    <option value=\"theme4\">Halloween1</option>\r\n                    <option value=\"theme5\">Halloween2</option>\r\n                    <option value=\"theme6\">WildZone</option>\r\n                    <option value=\"theme7\">Medieval</option>\r\n                    <option value=\"theme8\">Disco</option>\r\n                    <option value=\"theme9\">DiscoStar</option>\r\n                    <option value=\"theme10\">PlantWorld</option>\r\n                    <option value=\"theme11\">DJ.Penguin</option>\r\n                    <option value=\"theme12\">Splash</option>\r\n                    <option value=\"theme13\">Astro</option>\r\n                    <option value=\"theme14\">Snowy</option>\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"UserStore\")(observer(Board))\r\n","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\CreateRoom.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\SideMenu.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\RoomResult.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\UserForm.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\BoardCanvas.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\SuggestSong.js",["97"],"import React, { useState } from 'react';\r\nimport { Modal, Backdrop, Fade, makeStyles} from '@material-ui/core';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(4, 4, 4),\r\n        display: 'grid',\r\n        gridGap: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SuggestSong(props) {\r\n    const [open, setOpen] = useState(true)\r\n    const classes = useStyles();\r\n\r\n    const clickEvent = async (event) => {\r\n        const {id, dataset, innerHTML} = event.target\r\n        // console.log(dataset.channel)\r\n        await props.UserStore.getRoom()\r\n        const ifPreviouslyAdded = props.UserStore.room.queue.find(q => q.id === id)\r\n        ifPreviouslyAdded ? props.UserStore.addLike(id) : await props.UserStore.suggestSong(id, innerHTML)\r\n        handleClose()\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        props.openSuggest(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={true}>\r\n                    <div className={classes.paper} >\r\n                        {props.items.map(i => <div id={i.id} key={i.id} data-channel={i.channel} onClick={clickEvent} >{i.title}</div> )}\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"UserStore\")(observer(SuggestSong))\r\n","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Playlist.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\Player.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Song.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\Sprite.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\SpeechBubble.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\AvatarOption.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Alert.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Prompt.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Header.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":149,"column":19,"nodeType":"104","messageId":"105","endLine":149,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":159,"column":19,"nodeType":"104","messageId":"105","endLine":159,"endColumn":27},{"ruleId":"106","severity":1,"message":"107","line":20,"column":8,"nodeType":"108","endLine":20,"endColumn":10,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":72,"column":8,"nodeType":"108","endLine":72,"endColumn":10,"suggestions":"111"},{"ruleId":"102","severity":1,"message":"112","line":26,"column":20,"nodeType":"104","messageId":"105","endLine":26,"endColumn":27},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkValidity'. Either include it or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'theme'. Either include it or remove the dependency array.",["116"],"'dataset' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [checkValidity]",{"range":"121","text":"122"},"Update the dependencies array to be: [theme]",{"range":"123","text":"124"},[676,678],"[checkValidity]",[2317,2319],"[theme]"]