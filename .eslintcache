[{"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\index.js":"1","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\App.js":"2","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\stores\\userStore.js":"3","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\Constants.js":"4","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Header.js":"5","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Home.js":"6","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Room.js":"7","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\CreateRoom.js":"8","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\RoomResult.js":"9","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Board.js":"10","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\SideMenu.js":"11","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Alert.js":"12","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\UserForm.js":"13","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Prompt.js":"14","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\SuggestSong.js":"15","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Playlist.js":"16","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\AvatarOption.js":"17","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Board\\BoardCanvas.js":"18","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Board\\Player.js":"19","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Board\\SpeechBubble.js":"20","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Song.js":"21","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Board\\Sprite.js":"22","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Video.js":"23"},{"size":481,"mtime":1611152486061,"results":"24","hashOfConfig":"25"},{"size":532,"mtime":1611268438318,"results":"26","hashOfConfig":"25"},{"size":7063,"mtime":1611367814896,"results":"27","hashOfConfig":"25"},{"size":509,"mtime":1611326311365,"results":"28","hashOfConfig":"25"},{"size":1291,"mtime":1611326311369,"results":"29","hashOfConfig":"25"},{"size":1202,"mtime":1611265925830,"results":"30","hashOfConfig":"25"},{"size":2232,"mtime":1611268438324,"results":"31","hashOfConfig":"25"},{"size":4424,"mtime":1611326311368,"results":"32","hashOfConfig":"25"},{"size":1176,"mtime":1611268438325,"results":"33","hashOfConfig":"25"},{"size":6226,"mtime":1611352228044,"results":"34","hashOfConfig":"25"},{"size":2341,"mtime":1611364935711,"results":"35","hashOfConfig":"25"},{"size":1429,"mtime":1611265925825,"results":"36","hashOfConfig":"25"},{"size":3415,"mtime":1611326311370,"results":"37","hashOfConfig":"25"},{"size":2612,"mtime":1611265925832,"results":"38","hashOfConfig":"25"},{"size":2058,"mtime":1611145877923,"results":"39","hashOfConfig":"25"},{"size":330,"mtime":1611367098737,"results":"40","hashOfConfig":"25"},{"size":1124,"mtime":1611268438319,"results":"41","hashOfConfig":"25"},{"size":2806,"mtime":1611345526405,"results":"42","hashOfConfig":"25"},{"size":3750,"mtime":1611345527913,"results":"43","hashOfConfig":"25"},{"size":14992,"mtime":1611145877919,"results":"44","hashOfConfig":"25"},{"size":938,"mtime":1611145877923,"results":"45","hashOfConfig":"25"},{"size":1114,"mtime":1611145877920,"results":"46","hashOfConfig":"25"},{"size":3363,"mtime":1611366851984,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"h1luz1",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\index.js",[],["98","99"],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\App.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\stores\\userStore.js",["100"],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\Constants.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Header.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Home.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Room.js",["101"],"import React, {useState, useEffect} from 'react';\r\nimport Board from './Board';\r\nimport SideMenu from './SideMenu';\r\nimport UserForm from './UserForm';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport { observer, inject } from 'mobx-react';\r\nimport {Button} from '@material-ui/core';\r\nimport Alert from './Alert'\r\nimport Prompt from './Prompt'\r\n\r\nfunction Room(props) {\r\n    const [open, setOpen] = useState(null);\r\n    const location = useLocation();\r\n    const [alert, setAlert] = useState({value: false, text: \"\"})\r\n    const [prompt, setPrompt] = useState(false)\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        checkValidity()\r\n    }, []);\r\n\r\n    const checkValidity = async () => {\r\n        const roomID = location.pathname.split('/')[2]\r\n        await props.UserStore.getRooms()\r\n        const room = props.UserStore.rooms.find(r => r._id === roomID)\r\n        if(room && room.guests.length < room.size){\r\n            if(room.roomPassword){\r\n                setPrompt(true)\r\n            }else{\r\n                props.UserStore.setRoom(room)\r\n                setOpen(true)\r\n            }\r\n        }else if(!room){\r\n            setAlert({value: true, text: \"The room is not found!\" })\r\n        }else{\r\n            setAlert({value: true, text: \"The room is full!\" })\r\n        }\r\n    }\r\n\r\n    const checkHost = () => props.UserStore.socket.id === props.UserStore.room.host\r\n\r\n    const deleteRoom = async () => {\r\n        props.UserStore.deleteRoom()\r\n        history.push(\"/home\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"room\">\r\n            {open && <UserForm open={setOpen} /> }\r\n            {alert.value && <Alert text={alert.text} />}\r\n            {prompt && <Prompt setOpen={setOpen} />}\r\n            {open === false && (\r\n                <>\r\n                \r\n                <div className=\"roomGrid\">\r\n                    <SideMenu />\r\n                    <Board />\r\n                    {checkHost() && <Button variant=\"contained\" color=\"secondary\" onClick={deleteRoom} >\r\n                        Delete Room\r\n                    </Button>}\r\n                </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"UserStore\")(observer(Room))\r\n\r\n","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\CreateRoom.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\RoomResult.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Board.js",["102"],"import React, { useRef, useEffect, useState } from 'react';\r\nimport BoardCanvas from './Board/BoardCanvas';\r\nimport { Button } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport { observer, inject } from 'mobx-react'\r\nimport { ADD_PLAYER, MOVE_PLAYER, PLAYER_MOVED, SEND_MESSAGE, RECEIVED_MESSAGE } from '../Constants';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    selectTheme: {\r\n        margin: theme.spacing(2),\r\n        minWidth: 130,\r\n        fontSize: 25\r\n    },\r\n    chat: {\r\n        margin: theme.spacing(0.2),\r\n        width: 1000,\r\n        fontSize: 25,\r\n        alignItems: 'center'\r\n    },\r\n    btnDance: {\r\n        width: 120,\r\n        margin: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst Board = observer((props) => {\r\n\r\n    const webSocket = useRef(props.UserStore.socket)\r\n\r\n    let { room } = props.UserStore\r\n\r\n    const playerIndex = (socket_id) => {\r\n        const index = boardRef.current.PLAYERS.findIndex(p => p.playerId === socket_id)\r\n        return index\r\n    }\r\n\r\n    const canvasRef = useRef(null),\r\n        messageRef = useRef(null),\r\n        boardRef = useRef(null),\r\n        [theme, setTheme] = useState(props.UserStore.room.theme),\r\n        classes = useStyles();\r\n\r\n    const doDance = () => {\r\n        boardRef.current.PLAYERS[playerIndex(webSocket.current.id)].sendMessage('/dance');\r\n        webSocket.current.emit(SEND_MESSAGE, {\r\n            id: webSocket.current.id,\r\n            message: '/dance',\r\n            room: room._id\r\n        })\r\n    }\r\n\r\n    const onSelectTheme = (e) => {\r\n        const theTheme = e.target.value;\r\n        boardRef.current.changeTheme(theTheme);\r\n        setTheme(theTheme);\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        const message = messageRef.current;\r\n        boardRef.current.PLAYERS[playerIndex(webSocket.current.id)].sendMessage(message.value);\r\n        webSocket.current.emit(SEND_MESSAGE, {\r\n            id: webSocket.current.id,\r\n            message: message.value,\r\n            room: room._id\r\n        })\r\n    }\r\n\r\n    const onCanvasClick = (e) => {\r\n        const rect = canvasRef.current.getBoundingClientRect();\r\n        let x = Math.floor(e.clientX - rect.left);\r\n        let y = Math.floor(e.clientY - rect.top);\r\n\r\n        const playerId = webSocket.current.id;\r\n        if (x + boardRef.current.PLAYERS[playerIndex(playerId)].width > canvasRef.current.width)\r\n            x = x - boardRef.current.PLAYERS[playerIndex(playerId)].width;\r\n\r\n        if (y + boardRef.current.PLAYERS[playerIndex(playerId)].height > canvasRef.current.height)\r\n            y = y - boardRef.current.PLAYERS[playerIndex(playerId)].height;\r\n\r\n        webSocket.current.emit(MOVE_PLAYER, {\r\n            id: webSocket.current.id,\r\n            x: x,\r\n            y: y,\r\n            room: room._id\r\n        })\r\n\r\n        boardRef.current.PLAYERS[playerIndex(playerId)].targetPos = { x, y };\r\n    }\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n        boardRef.current = new BoardCanvas(canvas, context, theme);\r\n\r\n        room.guests.forEach(g => boardRef.current.newPlayer({\r\n            playerId: g.id,\r\n            userName: g.userName,\r\n            avatar: g.avatar,\r\n            x: 350,\r\n            y: 350,\r\n            width: 85,\r\n            height: 85,\r\n            theme: room.theme\r\n        }));\r\n\r\n        boardRef.current.start();\r\n\r\n        webSocket.current.on(ADD_PLAYER, (data) => {\r\n            boardRef.current.newPlayer({\r\n                playerId: data.playerId,\r\n                userName: data.userName,\r\n                avatar: data.avatar,\r\n                x: data.x,\r\n                y: data.y,\r\n                height: 85,\r\n                width: 85,\r\n                theme: data.theme\r\n            });\r\n        });\r\n\r\n        webSocket.current.on(PLAYER_MOVED, (data) => {\r\n            const { id, x, y } = data;\r\n            boardRef.current.PLAYERS[playerIndex(id)].targetPos = { x, y };\r\n        });\r\n\r\n        webSocket.current.on(RECEIVED_MESSAGE, (data) => {\r\n            const { message, id } = data\r\n            boardRef.current.PLAYERS[playerIndex(id)].sendMessage(message);\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"board\">\r\n            <canvas onMouseDown={onCanvasClick} ref={canvasRef} width=\"1000\" height=\"632\"></canvas>\r\n            <br />\r\n            <FormControl className={classes.chat}>\r\n                <InputEmoji maxLength={31} ref={messageRef} onEnter={sendMessage} cleanOnEnter placeholder=\"Type a message (/dance to dance)\" />\r\n                <Button type=\"button\" onClick={doDance} className={classes.btnDance} variant=\"contained\" color=\"secondary\">Dance</Button>\r\n            </FormControl>\r\n            <br />\r\n            <FormControl className={classes.selectTheme}>\r\n                <InputLabel color=\"secondary\">Select a theme:</InputLabel>\r\n                <NativeSelect value={theme} onChange={onSelectTheme} name=\"select_theme\" color=\"secondary\">\r\n                    <option value=\"theme1\">Icy</option>\r\n                    <option value=\"theme2\">Sky</option>\r\n                    <option value=\"theme3\">Thunder</option>\r\n                    <option value=\"theme4\">Halloween1</option>\r\n                    <option value=\"theme5\">Halloween2</option>\r\n                    <option value=\"theme6\">WildZone</option>\r\n                    <option value=\"theme7\">Medieval</option>\r\n                    <option value=\"theme8\">Disco</option>\r\n                    <option value=\"theme9\">DiscoStar</option>\r\n                    <option value=\"theme10\">PlantWorld</option>\r\n                    <option value=\"theme11\">DJ.Penguin</option>\r\n                    <option value=\"theme12\">Splash</option>\r\n                    <option value=\"theme13\">Astro</option>\r\n                    <option value=\"theme14\">Snowy</option>\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default inject(\"UserStore\")(Board)\r\n\r\n","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\SideMenu.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Alert.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\UserForm.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Prompt.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\SuggestSong.js",["103"],"import React, { useState } from 'react';\r\nimport { Modal, Backdrop, Fade, makeStyles} from '@material-ui/core';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(4, 4, 4),\r\n        display: 'grid',\r\n        gridGap: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SuggestSong(props) {\r\n    const [open, setOpen] = useState(true)\r\n    const classes = useStyles();\r\n\r\n    const clickEvent = async (event) => {\r\n        const {id, dataset, innerHTML} = event.target\r\n        // console.log(dataset.channel)\r\n        await props.UserStore.getRoom()\r\n        const ifPreviouslyAdded = props.UserStore.room.queue.find(q => q.id === id)\r\n        ifPreviouslyAdded ? props.UserStore.addLike(id) : await props.UserStore.suggestSong(id, innerHTML)\r\n        handleClose()\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        props.openSuggest(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={true}>\r\n                    <div className={classes.paper} >\r\n                        {props.items.map(i => <div id={i.id} key={i.id} data-channel={i.channel} onClick={clickEvent} >{i.title}</div> )}\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"UserStore\")(observer(SuggestSong))\r\n","C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Playlist.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\AvatarOption.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Board\\BoardCanvas.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Board\\Player.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Board\\SpeechBubble.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Song.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Board\\Sprite.js",[],"C:\\Users\\SUHA\\Desktop\\Party-Among-Us\\src\\components\\Video.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":5,"column":5,"nodeType":"110","messageId":"111","endLine":5,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":20,"column":8,"nodeType":"114","endLine":20,"endColumn":10,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":135,"column":8,"nodeType":"114","endLine":135,"endColumn":10,"suggestions":"117"},{"ruleId":"108","severity":1,"message":"118","line":26,"column":20,"nodeType":"110","messageId":"111","endLine":26,"endColumn":27},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'ASK_FOR_VIDEO_INFORMATION' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkValidity'. Either include it or remove the dependency array.","ArrayExpression",["121"],"React Hook useEffect has missing dependencies: 'room.guests', 'room.theme', and 'theme'. Either include them or remove the dependency array.",["122"],"'dataset' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [checkValidity]",{"range":"127","text":"128"},"Update the dependencies array to be: [room.guests, room.theme, theme]",{"range":"129","text":"130"},[676,678],"[checkValidity]",[4429,4431],"[room.guests, room.theme, theme]"]