[{"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\index.js":"1","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\App.js":"2","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\stores\\userStore.js":"3","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Room.js":"4","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Home.js":"5","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board.js":"6","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\CreateRoom.js":"7","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\SideMenu.js":"8","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\RoomResult.js":"9","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\UserForm.js":"10","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\BoardCanvas.js":"11","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\SuggestSong.js":"12","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Playlist.js":"13","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\Player.js":"14","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Song.js":"15","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\Sprite.js":"16","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\SpeechBubble.js":"17","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\AvatarOption.js":"18"},{"size":481,"mtime":1611144054769,"results":"19","hashOfConfig":"20"},{"size":518,"mtime":1611144054731,"results":"21","hashOfConfig":"20"},{"size":7323,"mtime":1611170161540,"results":"22","hashOfConfig":"20"},{"size":2084,"mtime":1611144054758,"results":"23","hashOfConfig":"20"},{"size":1675,"mtime":1611144054753,"results":"24","hashOfConfig":"20"},{"size":4115,"mtime":1611162061265,"results":"25","hashOfConfig":"20"},{"size":4260,"mtime":1611161025433,"results":"26","hashOfConfig":"20"},{"size":2238,"mtime":1611144054761,"results":"27","hashOfConfig":"20"},{"size":1176,"mtime":1611162632200,"results":"28","hashOfConfig":"20"},{"size":2502,"mtime":1611159583321,"results":"29","hashOfConfig":"20"},{"size":2923,"mtime":1611144054739,"results":"30","hashOfConfig":"20"},{"size":2058,"mtime":1611144054764,"results":"31","hashOfConfig":"20"},{"size":328,"mtime":1611144054757,"results":"32","hashOfConfig":"20"},{"size":3451,"mtime":1611144054743,"results":"33","hashOfConfig":"20"},{"size":938,"mtime":1611144054762,"results":"34","hashOfConfig":"20"},{"size":1114,"mtime":1611144054747,"results":"35","hashOfConfig":"20"},{"size":14992,"mtime":1611144054745,"results":"36","hashOfConfig":"20"},{"size":1085,"mtime":1611159570036,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1lz4ijw",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\index.js",[],["78","79"],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\App.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\stores\\userStore.js",["80","81"],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Room.js",["82"],"import React, {useState, useEffect} from 'react';\r\nimport Board from './Board';\r\nimport SideMenu from './SideMenu';\r\nimport UserForm from './UserForm';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport { observer, inject } from 'mobx-react';\r\nimport {Button} from '@material-ui/core';\r\n\r\nfunction Room(props) {\r\n    const [open, setOpen] = useState(null);\r\n    const location = useLocation();\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        checkValidity()\r\n    }, []);\r\n\r\n    const checkValidity = async () => {\r\n        const roomID = location.pathname.split('/')[2]\r\n        await props.UserStore.getRooms()\r\n        const room = props.UserStore.rooms.find(r => r._id === roomID)\r\n        if(room && room.guests.length < room.size){\r\n            if(room.roomPassword){\r\n                const password = prompt(\"Please write the room Password\")\r\n                if(password === room.roomPassword){\r\n                    props.UserStore.setRoom(room)\r\n                    setOpen(true)\r\n                }\r\n            }else{\r\n                props.UserStore.setRoom(room)\r\n                setOpen(true)\r\n            }\r\n        }else if(!room){\r\n            alert(\"Room is Not Found\")\r\n            history.push(\"/home\")\r\n        }else{\r\n            alert(\"The Room is Full\")\r\n            history.push(\"/home\")\r\n        }\r\n    }\r\n\r\n    const checkHost = () => props.UserStore.socket.id === props.UserStore.room.host\r\n\r\n    const deleteRoom = async () => {\r\n        props.UserStore.deleteRoom()\r\n        history.push(\"/home\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"roomGrid\">\r\n            {open && <UserForm open={setOpen} /> }\r\n            {open === false && (\r\n                <>\r\n                    <SideMenu />\r\n                    <Board />\r\n                    {checkHost() && <Button variant=\"contained\" color=\"secondary\" onClick={deleteRoom} >\r\n                        Delete Room\r\n                    </Button>}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"UserStore\")(observer(Room))\r\n\r\n","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Home.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board.js",["83"],"import React, { useRef, useEffect, useState } from 'react';\r\nimport BoardCanvas from './Board/BoardCanvas';\r\nimport { Button } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    selectTheme: {\r\n        margin: theme.spacing(2),\r\n        minWidth: 130,\r\n        fontSize: 25\r\n    },\r\n    chat: {\r\n        margin: theme.spacing(0.2),\r\n        width: 1000,\r\n        fontSize: 25,\r\n        alignItems: 'center'\r\n    },\r\n    btnDance: {\r\n        width: 120,\r\n        margin: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nfunction Board(props) {\r\n    const canvasRef = useRef(null),\r\n    messageRef = useRef(null),\r\n    boardRef = useRef(null),\r\n    [theme, setTheme] = useState(props.UserStore.room.theme),\r\n    classes = useStyles();\r\n\r\n    const doDance = () => {\r\n        boardRef.current.PLAYERS[0].movePlayer(null);\r\n    }\r\n\r\n    const onSelectTheme = (e) => {\r\n        const theTheme = e.target.value;\r\n        boardRef.current.changeTheme(theTheme);\r\n        setTheme(theTheme);\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        const message = messageRef.current;\r\n        boardRef.current.PLAYERS[0].sendMessage(message.value);\r\n    }\r\n\r\n    const onCanvasClick = (e) => {\r\n        const rect = canvasRef.current.getBoundingClientRect();\r\n        let x = Math.floor(e.clientX - rect.left);\r\n        let y = Math.floor(e.clientY - rect.top);\r\n\r\n        if (x + boardRef.current.PLAYERS[0].width > canvasRef.current.width)\r\n            x = x - boardRef.current.PLAYERS[0].width;\r\n\r\n        if (y + boardRef.current.PLAYERS[0].height > canvasRef.current.height)\r\n            y = y - boardRef.current.PLAYERS[0].height;\r\n\r\n        boardRef.current.PLAYERS[0].targetPos = {x, y};\r\n    }\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n        boardRef.current = new BoardCanvas(canvas, context, theme);\r\n        //TODO get sockets for other players before we start\r\n        boardRef.current.start();\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"board\">\r\n            <canvas onMouseDown={onCanvasClick} ref={canvasRef} width=\"1000\" height=\"632\"></canvas>\r\n            <br/>\r\n            <FormControl className={classes.chat}>\r\n                <InputEmoji maxLength={31} ref={messageRef} onEnter={sendMessage} cleanOnEnter placeholder=\"Type a message (/dance to dance)\" />\r\n                <Button type=\"button\" onClick={doDance} className={classes.btnDance} variant=\"contained\" color=\"secondary\">Dance</Button>\r\n            </FormControl>\r\n            <br/>\r\n            <FormControl className={classes.selectTheme}>\r\n                <InputLabel color=\"secondary\">Select a theme:</InputLabel>\r\n                <NativeSelect value={theme} onChange={onSelectTheme} name=\"select_theme\" color=\"secondary\">\r\n                    <option value=\"theme1\">Icy</option>\r\n                    <option value=\"theme2\">Sky</option>\r\n                    <option value=\"theme3\">Thunder</option>\r\n                    <option value=\"theme4\">Halloween1</option>\r\n                    <option value=\"theme5\">Halloween2</option>\r\n                    <option value=\"theme6\">WildZone</option>\r\n                    <option value=\"theme7\">Medieval</option>\r\n                    <option value=\"theme8\">Disco</option>\r\n                    <option value=\"theme9\">DiscoStar</option>\r\n                    <option value=\"theme10\">PlantWorld</option>\r\n                    <option value=\"theme11\">DJ.Penguin</option>\r\n                    <option value=\"theme12\">Splash</option>\r\n                    <option value=\"theme13\">Astro</option>\r\n                    <option value=\"theme14\">Snowy</option>\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"UserStore\")(observer(Board))\r\n","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\CreateRoom.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\SideMenu.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\RoomResult.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\UserForm.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\BoardCanvas.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\SuggestSong.js",["84"],"import React, { useState } from 'react';\r\nimport { Modal, Backdrop, Fade, makeStyles} from '@material-ui/core';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(4, 4, 4),\r\n        display: 'grid',\r\n        gridGap: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SuggestSong(props) {\r\n    const [open, setOpen] = useState(true)\r\n    const classes = useStyles();\r\n\r\n    const clickEvent = async (event) => {\r\n        const {id, dataset, innerHTML} = event.target\r\n        // console.log(dataset.channel)\r\n        await props.UserStore.getRoom()\r\n        const ifPreviouslyAdded = props.UserStore.room.queue.find(q => q.id === id)\r\n        ifPreviouslyAdded ? props.UserStore.addLike(id) : await props.UserStore.suggestSong(id, innerHTML)\r\n        handleClose()\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        props.openSuggest(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={true}>\r\n                    <div className={classes.paper} >\r\n                        {props.items.map(i => <div id={i.id} key={i.id} data-channel={i.channel} onClick={clickEvent} >{i.title}</div> )}\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"UserStore\")(observer(SuggestSong))\r\n","C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Playlist.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\Player.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Song.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\Sprite.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\Board\\SpeechBubble.js",[],"C:\\Users\\user\\Desktop\\code\\projects\\MusicParty\\Party-Among-Us\\src\\components\\AvatarOption.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":148,"column":19,"nodeType":"91","messageId":"92","endLine":148,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":158,"column":19,"nodeType":"91","messageId":"92","endLine":158,"endColumn":27},{"ruleId":"93","severity":1,"message":"94","line":16,"column":8,"nodeType":"95","endLine":16,"endColumn":10,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":72,"column":8,"nodeType":"95","endLine":72,"endColumn":10,"suggestions":"98"},{"ruleId":"89","severity":1,"message":"99","line":26,"column":20,"nodeType":"91","messageId":"92","endLine":26,"endColumn":27},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkValidity'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'theme'. Either include it or remove the dependency array.",["103"],"'dataset' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [checkValidity]",{"range":"108","text":"109"},"Update the dependencies array to be: [theme]",{"range":"110","text":"111"},[501,503],"[checkValidity]",[2317,2319],"[theme]"]