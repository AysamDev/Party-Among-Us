[{"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\index.js":"1","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\App.js":"2","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\stores\\userStore.js":"3","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Room.js":"4","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Header.js":"5","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Home.js":"6","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\Constants.js":"7","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\SideMenu.js":"8","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Alert.js":"9","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\UserForm.js":"10","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Board.js":"11","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\CreateRoom.js":"12","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Prompt.js":"13","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\RoomResult.js":"14","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Playlist.js":"15","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\SuggestSong.js":"16","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\AvatarOption.js":"17","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Board\\BoardCanvas.js":"18","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Board\\Player.js":"19","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Board\\SpeechBubble.js":"20","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Song.js":"21","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Board\\Sprite.js":"22"},{"size":481,"mtime":1611314171189,"results":"23","hashOfConfig":"24"},{"size":532,"mtime":1611314171183,"results":"25","hashOfConfig":"24"},{"size":6484,"mtime":1611322835025,"results":"26","hashOfConfig":"24"},{"size":2232,"mtime":1611314171183,"results":"27","hashOfConfig":"24"},{"size":1291,"mtime":1611315132777,"results":"28","hashOfConfig":"24"},{"size":1202,"mtime":1611314171183,"results":"29","hashOfConfig":"24"},{"size":509,"mtime":1611322590160,"results":"30","hashOfConfig":"24"},{"size":2210,"mtime":1611314171189,"results":"31","hashOfConfig":"24"},{"size":1429,"mtime":1611314171183,"results":"32","hashOfConfig":"24"},{"size":3415,"mtime":1611323168315,"results":"33","hashOfConfig":"24"},{"size":6226,"mtime":1611322866554,"results":"34","hashOfConfig":"24"},{"size":4424,"mtime":1611323158980,"results":"35","hashOfConfig":"24"},{"size":2612,"mtime":1611314171183,"results":"36","hashOfConfig":"24"},{"size":1176,"mtime":1611314171183,"results":"37","hashOfConfig":"24"},{"size":328,"mtime":1611314171183,"results":"38","hashOfConfig":"24"},{"size":2058,"mtime":1611314171189,"results":"39","hashOfConfig":"24"},{"size":1124,"mtime":1611314171183,"results":"40","hashOfConfig":"24"},{"size":2806,"mtime":1611322797611,"results":"41","hashOfConfig":"24"},{"size":3750,"mtime":1611314171183,"results":"42","hashOfConfig":"24"},{"size":14992,"mtime":1611314171183,"results":"43","hashOfConfig":"24"},{"size":938,"mtime":1611314171189,"results":"44","hashOfConfig":"24"},{"size":1114,"mtime":1611314171183,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"4x7v7f",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\index.js",[],["93","94"],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\App.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\stores\\userStore.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Room.js",["95"],"import React, {useState, useEffect} from 'react';\r\nimport Board from './Board';\r\nimport SideMenu from './SideMenu';\r\nimport UserForm from './UserForm';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport { observer, inject } from 'mobx-react';\r\nimport {Button} from '@material-ui/core';\r\nimport Alert from './Alert'\r\nimport Prompt from './Prompt'\r\n\r\nfunction Room(props) {\r\n    const [open, setOpen] = useState(null);\r\n    const location = useLocation();\r\n    const [alert, setAlert] = useState({value: false, text: \"\"})\r\n    const [prompt, setPrompt] = useState(false)\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        checkValidity()\r\n    }, []);\r\n\r\n    const checkValidity = async () => {\r\n        const roomID = location.pathname.split('/')[2]\r\n        await props.UserStore.getRooms()\r\n        const room = props.UserStore.rooms.find(r => r._id === roomID)\r\n        if(room && room.guests.length < room.size){\r\n            if(room.roomPassword){\r\n                setPrompt(true)\r\n            }else{\r\n                props.UserStore.setRoom(room)\r\n                setOpen(true)\r\n            }\r\n        }else if(!room){\r\n            setAlert({value: true, text: \"The room is not found!\" })\r\n        }else{\r\n            setAlert({value: true, text: \"The room is full!\" })\r\n        }\r\n    }\r\n\r\n    const checkHost = () => props.UserStore.socket.id === props.UserStore.room.host\r\n\r\n    const deleteRoom = async () => {\r\n        props.UserStore.deleteRoom()\r\n        history.push(\"/home\")\r\n    }\r\n\r\n    return (\r\n        <div id=\"room\">\r\n            {open && <UserForm open={setOpen} /> }\r\n            {alert.value && <Alert text={alert.text} />}\r\n            {prompt && <Prompt setOpen={setOpen} />}\r\n            {open === false && (\r\n                <>\r\n                \r\n                <div className=\"roomGrid\">\r\n                    <SideMenu />\r\n                    <Board />\r\n                    {checkHost() && <Button variant=\"contained\" color=\"secondary\" onClick={deleteRoom} >\r\n                        Delete Room\r\n                    </Button>}\r\n                </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"UserStore\")(observer(Room))\r\n\r\n","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Header.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Home.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\Constants.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\SideMenu.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Alert.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\UserForm.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Board.js",["96"],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\CreateRoom.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Prompt.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\RoomResult.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Playlist.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\SuggestSong.js",["97"],"import React, { useState } from 'react';\r\nimport { Modal, Backdrop, Fade, makeStyles} from '@material-ui/core';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(4, 4, 4),\r\n        display: 'grid',\r\n        gridGap: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SuggestSong(props) {\r\n    const [open, setOpen] = useState(true)\r\n    const classes = useStyles();\r\n\r\n    const clickEvent = async (event) => {\r\n        const {id, dataset, innerHTML} = event.target\r\n        // console.log(dataset.channel)\r\n        await props.UserStore.getRoom()\r\n        const ifPreviouslyAdded = props.UserStore.room.queue.find(q => q.id === id)\r\n        ifPreviouslyAdded ? props.UserStore.addLike(id) : await props.UserStore.suggestSong(id, innerHTML)\r\n        handleClose()\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        props.openSuggest(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={true}>\r\n                    <div className={classes.paper} >\r\n                        {props.items.map(i => <div id={i.id} key={i.id} data-channel={i.channel} onClick={clickEvent} >{i.title}</div> )}\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"UserStore\")(observer(SuggestSong))\r\n","C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\AvatarOption.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Board\\BoardCanvas.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Board\\Player.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Board\\SpeechBubble.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Song.js",[],"C:\\Users\\null\\Desktop\\Final Project\\Party-Among-Us\\src\\components\\Board\\Sprite.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":20,"column":8,"nodeType":"104","endLine":20,"endColumn":10,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":135,"column":8,"nodeType":"104","endLine":135,"endColumn":10,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":26,"column":20,"nodeType":"110","messageId":"111","endLine":26,"endColumn":27},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkValidity'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has missing dependencies: 'room.guests', 'room.theme', and 'theme'. Either include them or remove the dependency array.",["115"],"no-unused-vars","'dataset' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [checkValidity]",{"range":"120","text":"121"},"Update the dependencies array to be: [room.guests, room.theme, theme]",{"range":"122","text":"123"},[676,678],"[checkValidity]",[4429,4431],"[room.guests, room.theme, theme]"]